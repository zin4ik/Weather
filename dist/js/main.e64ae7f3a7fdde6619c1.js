!function(e){function t(t){for(var r,c,a=t[0],l=t[1],u=t[2],p=0,f=[];p<a.length;p++)c=a[p],Object.prototype.hasOwnProperty.call(o,c)&&o[c]&&f.push(o[c][0]),o[c]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(s&&s(t);f.length;)f.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,a=1;a<n.length;a++){var l=n[a];0!==o[l]&&(r=!1)}r&&(i.splice(t--,1),e=c(c.s=n[0]))}return e}var r={},o={0:0},i=[];function c(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,c),n.l=!0,n.exports}c.m=e,c.c=r,c.d=function(e,t,n){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)c.d(n,r,function(t){return e[t]}.bind(null,r));return n},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/";var a=window.webpackJsonp=window.webpackJsonp||[],l=a.push.bind(a);a.push=t,a=a.slice();for(var u=0;u<a.length;u++)t(a[u]);var s=l;i.push([8,1]),n()}([,,function(e,t,n){var r=n(3);"string"==typeof r&&(r=[[e.i,r,""]]);var o={insert:"head",singleton:!1};n(4)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){},,,,function(e,t,n){(function(e){e(document).ready(function(e){console.log("start"),console.log("go"),e.getJSON("./json/city.json",function(t){e(".country_select").on("change",function(n){n=e(".country_select option:selected").val();console.log(n);var r,o,i="";for(var c in t)t[c].country==n&&(i+='<p value="'.concat(t[c].id,'">').concat(t[c].name,"</p>"));e("#city").html(i),r=e("#city p"),o=e("#city"),r.sort(function(t,n){var r=e(t).text(),o=e(n).text();return r&&o?r.toUpperCase().localeCompare(o.toUpperCase()):0}),r.detach().appendTo(o),e("#city p").on("click",function(){console.log(e(this).attr("value")),e.get("http://api.openweathermap.org/data/2.5/weather?",{id:e(this).attr("value"),appid:"32e8821013bcd7e0a7418bdd28589135"},function(t){var n="";n+="Погода <b>"+t.weather[0].main+"<b/><br>",n+='<p style="text-align:center"><img src="http://openweathermap.org/img/w/'+t.weather[0].icon+'.png"></p>',n+="Температура: <b>"+Math.round(t.main.temp-273)+"&#176; C<b/><br>",n+="Влажность: <b>"+t.main.humidity+"%</b><br>",n+="Видимость: <b>"+t.visibility/1e3+"км.</b><br>",console.log(t.main),e("#weather").html(n)})})})})}),document.querySelector("#city_inpt").oninput=function(){var e=this.value.trim();var t,n=(t=e)?t[0].toUpperCase()+t.slice(1):t,r=document.querySelectorAll("#city p");""!=n?r.forEach(function(e){if(-1==e.innerText.search(n))e.classList.add("hide"),e.innerHTML=e.innerText;else{e.classList.remove("hide");var t=e.innerText;e.innerHTML=function(e,t,n){return e.slice(0,t)+"<mark>"+e.slice(t,t+n)+"</mark>"+e.slice(t+n)}(t,e.innerText.search(n),n.length)}}):r.forEach(function(e){e.classList.remove("hide"),e.innerHTML=e.innerText})}}).call(this,n(0))},function(e,t,n){"use strict";n.r(t);n(2),n(1),n(5),n(6),n(7)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Njc3MvbWFpbi5zY3NzPzUzNzciLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2pzZmlsZS93ZWF0aGVyLmpzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMCIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwiY29udGVudCIsIm9wdGlvbnMiLCJsb2NhbHMiLCJqUXVlcnkiLCJkb2N1bWVudCIsInJlYWR5IiwiJCIsImNvbnNvbGUiLCJsb2ciLCJnZXRKU09OIiwib24iLCJlbCIsInZhbCIsIiRlbGVtZW50cyIsIiR0YXJnZXQiLCJvdXQiLCJjb3VudHJ5IiwiaWQiLCJodG1sIiwic29ydCIsImEiLCJiIiwiYW4iLCJ0ZXh0IiwiYm4iLCJ0b1VwcGVyQ2FzZSIsImxvY2FsZUNvbXBhcmUiLCJkZXRhY2giLCJhcHBlbmRUbyIsInRoaXMiLCJhdHRyIiwiYXBwaWQiLCJ3ZWF0aGVyIiwibWFpbiIsImljb24iLCJNYXRoIiwicm91bmQiLCJ0ZW1wIiwiaHVtaWRpdHkiLCJ2aXNpYmlsaXR5IiwicXVlcnlTZWxlY3RvciIsIm9uaW5wdXQiLCJ0cmltIiwic3RyIiwidmFsVXAiLCJlbGFzdGljdGVtcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZWxlbSIsImlubmVyVGV4dCIsInNlYXJjaCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVySFRNTCIsInJlbW92ZSIsInN0ckVsIiwicG9zIiwibGVuIiwiaW5zZXJ0TWFyayJdLCJtYXBwaW5ncyI6ImFBQ0UsU0FBU0EsRUFBcUJDLEdBUTdCLElBUEEsSUFNSUMsRUFBVUMsRUFOVkMsRUFBV0gsRUFBSyxHQUNoQkksRUFBY0osRUFBSyxHQUNuQkssRUFBaUJMLEVBQUssR0FJSE0sRUFBSSxFQUFHQyxFQUFXLEdBQ3BDRCxFQUFJSCxFQUFTSyxPQUFRRixJQUN6QkosRUFBVUMsRUFBU0csR0FDaEJHLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtDLEVBQWlCWCxJQUFZVyxFQUFnQlgsSUFDcEZLLEVBQVNPLEtBQUtELEVBQWdCWCxHQUFTLElBRXhDVyxFQUFnQlgsR0FBVyxFQUU1QixJQUFJRCxLQUFZRyxFQUNaSyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLUixFQUFhSCxLQUNwRGMsRUFBUWQsR0FBWUcsRUFBWUgsSUFLbEMsSUFGR2UsR0FBcUJBLEVBQW9CaEIsR0FFdENPLEVBQVNDLFFBQ2RELEVBQVNVLE9BQVRWLEdBT0QsT0FIQVcsRUFBZ0JKLEtBQUtLLE1BQU1ELEVBQWlCYixHQUFrQixJQUd2RGUsSUFFUixTQUFTQSxJQUVSLElBREEsSUFBSUMsRUFDSWYsRUFBSSxF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RixhQUNKbkIsR0FBTyxtQkFBcUJvQixLQUFLQyxNQUFNbEcsRUFBSytGLEtBQUtJLEtBQU8sS0FBTyxtQkFDL0R0QixHQUFPLGlCQUFtQjdFLEVBQUsrRixLQUFLSyxTQUFXLFlBQy9DdkIsR0FBTyxpQkFBb0I3RSxFQUFLcUcsV0FBYSxJQUFRLGNBQ3JEaEMsUUFBUUMsSUFBSXRFLEVBQUsrRixNQUNqQjNCLEVBQUUsWUFBWVksS0FBS0gsYUFhM0NYLFNBQVNvQyxjQUFjLGNBQWNDLFFBQVUsV0FFM0MsSUFBSTdCLEVBQU1pQixLQUFLN0MsTUFBTTBELE9BT3JCLElBTGlCQyxFQUtiQyxHQUxhRCxFQUtHL0IsR0FIVCtCLEVBQUksR0FBR2xCLGNBQWdCa0IsRUFBSTVDLE1BQU0sR0FEdkI0QyxFQU1qQkUsRUFBY3pDLFNBQVMwQyxpQkFBaUIsV0FDL0IsSUFBVEYsRUFDQUMsRUFBWUUsUUFBUSxTQUFVQyxHQUMxQixJQUFxQyxHQUFqQ0EsRUFBS0MsVUFBVUMsT0FBT04sR0FDdEJJLEVBQUtHLFVBQVVDLElBQUksUUFDbkJKLEVBQUtLLFVBQVlMLEVBQUtDLGNBRXJCLENBQ0RELEVBQUtHLFVBQVVHLE9BQU8sUUFDdEIsSUFBSUMsRUFBUVAsRUFBS0MsVUFDakJELEVBQUtLLFVBYXJCLFNBQW9CVixFQUFLYSxFQUFLQyxHQUMxQixPQUFPZCxFQUFJNUMsTUFBTSxFQUFHeUQsR0FBTyxTQUFXYixFQUFJNUMsTUFBTXlELEVBQUtBLEVBQU1DLEdBQU8sVUFBWWQsRUFBSTVDLE1BQU15RCxFQUFNQyxHQWRqRUMsQ0FBV0gsRUFBT1AsRUFBS0MsVUFBVUMsT0FBT04sR0FBUUEsRUFBTWxHLFdBSy9FbUcsRUFBWUUsUUFBUSxTQUFVQyxHQUMxQkEsRUFBS0csVUFBVUcsT0FBTyxRQUN0Qk4sRUFBS0ssVUFBWUwsRUFBS0MsZSIsImZpbGUiOiJqcy9tYWluLmU2NGFlN2YzYTdmZGRlNjYxOWMxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdHJldHVybiByZXN1bHQ7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHQvLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbiBcdC8vIFByb21pc2UgPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHQwOiAwXG4gXHR9O1xuXG4gXHR2YXIgZGVmZXJyZWRNb2R1bGVzID0gW107XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbOCwxXSk7XG4gXHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIHJlYWR5XG4gXHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiIsInZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL21pbmktY3NzLWV4dHJhY3QtcGx1Z2luL2Rpc3QvbG9hZGVyLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9yZWYtLTUtMiEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanM/P3JlZi0tNS00IS4vbWFpbi5zY3NzXCIpO1xuXG5pZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbn1cblxudmFyIG9wdGlvbnMgPSB7fVxuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZiAoY29udGVudC5sb2NhbHMpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbn1cbiIsImpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCQpIHtcclxuICAgIGNvbnNvbGUubG9nKFwic3RhcnRcIik7XHJcbiAgICBjb25zb2xlLmxvZyhcImdvXCIpO1xyXG4gICAgJC5nZXRKU09OKCcuL2pzb24vY2l0eS5qc29uJywgZnVuY3Rpb24gKGRhdGEpIHtcclxuXHJcbiAgICAgICAgJCgnLmNvdW50cnlfc2VsZWN0Jykub24oJ2NoYW5nZScsIGZ1bmN0aW9uIChlbCkge1xyXG5cclxuICAgICAgICAgICAgdmFyIGVsID0gJCgnLmNvdW50cnlfc2VsZWN0IG9wdGlvbjpzZWxlY3RlZCcpLnZhbCgpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlbCk7XHJcblxyXG4gICAgICAgICAgICB2YXIgb3V0ID0gJyc7XHJcblxyXG4gICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gZGF0YSkge1xyXG5cclxuICAgICAgICAgICAgICAgIGlmIChkYXRhW2tleV0uY291bnRyeSA9PSBlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG91dCArPSBgPHAgdmFsdWU9XCIke2RhdGFba2V5XS5pZH1cIj4ke2RhdGFba2V5XS5uYW1lfTwvcD5gO1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKCcjY2l0eScpLmh0bWwob3V0KVxyXG4gICAgICAgICAgICAvKj09PT09PT09PT09PT09PT09INGB0L7RgNGC0LjRgNC+0LLQutCwID09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuICAgICAgICAgICAgZnVuY3Rpb24gc29ydCgpIHtcclxuICAgICAgICAgICAgICAgIHZhciAkZWxlbWVudHMgPSAkKCcjY2l0eSBwJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgJHRhcmdldCA9ICQoJyNjaXR5Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgJGVsZW1lbnRzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYW4gPSAkKGEpLnRleHQoKTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYm4gPSAkKGIpLnRleHQoKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFuICYmIGJuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhbi50b1VwcGVyQ2FzZSgpLmxvY2FsZUNvbXBhcmUoYm4udG9VcHBlckNhc2UoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICRlbGVtZW50cy5kZXRhY2goKS5hcHBlbmRUbygkdGFyZ2V0KTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgc29ydCgpO1xyXG5cclxuICAgICAgICAgICAgLyo9PT09PT09PT09PT09PT09PSDQstC40LLRltC0INC00LDQvdC40YUgPT09PT09PT09PT09PT09PT09PT09PT0qL1xyXG4gICAgICAgICAgICAkKCcjY2l0eSBwJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJCh0aGlzKS5hdHRyKCd2YWx1ZScpKTtcclxuICAgICAgICAgICAgICAgICQuZ2V0KFxyXG4gICAgICAgICAgICAgICAgICAgIFwiaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9cIixcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAkKHRoaXMpLmF0dHIoJ3ZhbHVlJyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGlkOiBcIjMyZTg4MjEwMTNiY2Q3ZTBhNzQxOGJkZDI4NTg5MTM1XCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG5cclxuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgb3V0ID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dCArPSAn0J/QvtCz0L7QtNCwIDxiPicgKyBkYXRhLndlYXRoZXJbMF0ubWFpbiArICc8Yi8+PGJyPic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dCArPSAnPHAgc3R5bGU9XCJ0ZXh0LWFsaWduOmNlbnRlclwiPjxpbWcgc3JjPVwiaHR0cDovL29wZW53ZWF0aGVybWFwLm9yZy9pbWcvdy8nICsgZGF0YS53ZWF0aGVyWzBdLmljb24gK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJy5wbmdcIj48L3A+JztcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICfQotC10LzQv9C10YDQsNGC0YPRgNCwOiA8Yj4nICsgTWF0aC5yb3VuZChkYXRhLm1haW4udGVtcCAtIDI3MykgKyAnJiMxNzY7IEM8Yi8+PGJyPic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dCArPSAn0JLQu9Cw0LbQvdC+0YHRgtGMOiA8Yj4nICsgZGF0YS5tYWluLmh1bWlkaXR5ICsgJyU8L2I+PGJyPic7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dCArPSAn0JLQuNC00LjQvNC+0YHRgtGMOiA8Yj4nICsgKGRhdGEudmlzaWJpbGl0eSAvIDEwMDApICsgJ9C60LwuPC9iPjxicj4nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhLm1haW4pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjd2VhdGhlcicpLmh0bWwob3V0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICApXHJcblxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbn0pO1xyXG5cclxuLyo9PT09PT09PT09IHNlYXJjaD09PT09PT09PSovXHJcblxyXG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2l0eV9pbnB0Jykub25pbnB1dCA9IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICBsZXQgdmFsID0gdGhpcy52YWx1ZS50cmltKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gdWNGaXJzdChzdHIpIHtcclxuICAgICAgICBpZiAoIXN0cikgcmV0dXJuIHN0cjtcclxuICAgICAgICByZXR1cm4gc3RyWzBdLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHZhbFVwID0gdWNGaXJzdCh2YWwpO1xyXG5cclxuICAgIGxldCBlbGFzdGljdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNjaXR5IHAnKTtcclxuICAgIGlmICh2YWxVcCAhPSAnJykge1xyXG4gICAgICAgIGVsYXN0aWN0ZW1zLmZvckVhY2goZnVuY3Rpb24gKGVsZW0pIHtcclxuICAgICAgICAgICAgaWYgKGVsZW0uaW5uZXJUZXh0LnNlYXJjaCh2YWxVcCkgPT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xyXG4gICAgICAgICAgICAgICAgZWxlbS5pbm5lckhUTUwgPSBlbGVtLmlubmVyVGV4dDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZScpO1xyXG4gICAgICAgICAgICAgICAgbGV0IHN0ckVsID0gZWxlbS5pbm5lclRleHQ7XHJcbiAgICAgICAgICAgICAgICBlbGVtLmlubmVySFRNTCA9IGluc2VydE1hcmsoc3RyRWwsIGVsZW0uaW5uZXJUZXh0LnNlYXJjaCh2YWxVcCksIHZhbFVwLmxlbmd0aClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBlbGFzdGljdGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtKSB7XHJcbiAgICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LnJlbW92ZSgnaGlkZScpO1xyXG4gICAgICAgICAgICBlbGVtLmlubmVySFRNTCA9IGVsZW0uaW5uZXJUZXh0O1xyXG5cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaW5zZXJ0TWFyayhzdHIsIHBvcywgbGVuKSB7XHJcbiAgICByZXR1cm4gc3RyLnNsaWNlKDAsIHBvcykgKyAnPG1hcms+JyArIHN0ci5zbGljZShwb3MsIHBvcyArIGxlbikgKyAnPC9tYXJrPicgKyBzdHIuc2xpY2UocG9zICsgbGVuKTtcclxufVxyXG5cclxuXHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==